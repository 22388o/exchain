basePath: /
definitions:
  AccAddress:
    description: When marshaled to a string or JSON, it uses Bech32.
    items:
      format: uint8
      type: integer
    title: AccAddress a wrapper around bytes meant to represent an account address.
    type: array
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  Address:
    $ref: '#/definitions/HexBytes'
    description: |-
      []byte leaves us the option to change the address length.
      Use an alias so Unmarshal methods (with ptr receivers) are available too.
    title: An address is a []byte, but hex-encoded even in JSON.
  BaseReq:
    description: |-
      BaseReq defines a structure that can be embedded in other request structures
      that all share common "base" fields.
    properties:
      account_number:
        format: uint64
        type: integer
        x-go-name: AccountNumber
      chain_id:
        type: string
        x-go-name: ChainID
      fees:
        $ref: '#/definitions/Coins'
      from:
        type: string
        x-go-name: From
      gas:
        type: string
        x-go-name: Gas
      gas_adjustment:
        type: string
        x-go-name: GasAdjustment
      gas_prices:
        $ref: '#/definitions/DecCoins'
      memo:
        type: string
        x-go-name: Memo
      sequence:
        format: uint64
        type: integer
        x-go-name: Sequence
      simulate:
        type: boolean
        x-go-name: Simulate
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types/rest
  BookRes:
    properties:
      asks:
        items:
          $ref: '#/definitions/BookResItem'
        type: array
        x-go-name: Asks
      bids:
        items:
          $ref: '#/definitions/BookResItem'
        type: array
        x-go-name: Bids
    type: object
    x-go-package: github.com/okex/okchain/x/order
  BookResItem:
    properties:
      price:
        type: string
        x-go-name: Price
      quantity:
        type: string
        x-go-name: Quantity
    type: object
    x-go-package: github.com/okex/okchain/x/order
  CodeType:
    description: CodeType - ABCI code identifier within codespace
    format: uint32
    type: integer
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  CodespaceType:
    description: CodespaceType - codespace identifier
    type: string
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  Coin:
    description: |-
      CONTRACT: A coin will never hold a negative amount of any denomination.

      TODO: Make field members private for further safety.
    properties:
      amount:
        $ref: '#/definitions/Int'
      denom:
        type: string
        x-go-name: Denom
    title: Coin hold some amount of one currency.
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  CoinInfo:
    properties:
      available:
        type: string
        x-go-name: Available
      freeze:
        type: string
        x-go-name: Freeze
      locked:
        type: string
        x-go-name: Locked
      symbol:
        type: string
        x-go-name: Symbol
    type: object
    x-go-package: github.com/okex/okchain/x/token
  Coins:
    description: Coins is a set of Coin, one per currency
    items:
      $ref: '#/definitions/Coin'
    type: array
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  Deal:
    properties:
      blockHeight:
        format: int64
        type: integer
        x-go-name: BlockHeight
      fee:
        type: string
        x-go-name: Fee
      orderId:
        type: string
        x-go-name: OrderId
      price:
        format: double
        type: number
        x-go-name: Price
      product:
        type: string
        x-go-name: Product
      sender:
        type: string
        x-go-name: Sender
      side:
        type: string
        x-go-name: Side
      timestamp:
        format: int64
        type: integer
        x-go-name: Timestamp
      volume:
        format: double
        type: number
        x-go-name: Quantity
    type: object
    x-go-package: github.com/okex/okchain/x/backend
  Dec:
    description: |-
      NOTE: never use new(Dec) or else we will panic unmarshalling into the
      nil embedded big.Int
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  DecCoin:
    description: Coins which can have additional decimal points
    properties:
      amount:
        $ref: '#/definitions/Dec'
      denom:
        type: string
        x-go-name: Denom
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  DecCoins:
    description: coins with decimal
    items:
      $ref: '#/definitions/DecCoin'
    type: array
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  Error:
    allOf:
    - $ref: '#/definitions/Error'
    - allOf:
      - $ref: '#/definitions/Error'
      description: sdk Error type
      properties:
        ABCILog:
          type: string
        Code:
          $ref: '#/definitions/CodeType'
        Codespace:
          $ref: '#/definitions/CodespaceType'
        QueryResult:
          $ref: '#/definitions/ResponseQuery'
        Result:
          $ref: '#/definitions/Result'
      type: object
    - $ref: '#/definitions/Error'
    - allOf:
      - $ref: '#/definitions/Error'
      - allOf:
        - $ref: '#/definitions/Error'
        description: sdk Error type
        properties:
          ABCILog:
            type: string
          Code:
            $ref: '#/definitions/CodeType'
          Codespace:
            $ref: '#/definitions/CodespaceType'
          QueryResult:
            $ref: '#/definitions/ResponseQuery'
          Result:
            $ref: '#/definitions/Result'
        type: object
      - $ref: '#/definitions/Error'
      description: sdk Error type
      properties:
        ABCILog:
          type: string
        Code:
          $ref: '#/definitions/CodeType'
        Codespace:
          $ref: '#/definitions/CodespaceType'
        QueryResult:
          $ref: '#/definitions/ResponseQuery'
        Result:
          $ref: '#/definitions/Result'
      type: object
      x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
    description: sdk Error type
    properties:
      ABCILog:
        type: string
      Code:
        $ref: '#/definitions/CodeType'
      Codespace:
        $ref: '#/definitions/CodespaceType'
      QueryResult:
        $ref: '#/definitions/ResponseQuery'
      Result:
        $ref: '#/definitions/Result'
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  FeeDetail:
    properties:
      address:
        type: string
        x-go-name: Address
      fee:
        type: string
        x-go-name: Fee
      feeType:
        type: string
        x-go-name: FeeType
      timestamp:
        format: int64
        type: integer
        x-go-name: Timestamp
    type: object
    x-go-package: github.com/okex/okchain/x/token
  HexBytes:
    items:
      format: uint8
      type: integer
    title: The main purpose of HexBytes is to enable HEX-encoding for json/encoding.
    type: array
    x-go-package: github.com/okex/okchain/vendor/github.com/tendermint/tendermint/libs/common
  Int:
    description: |-
      Int wraps integer with 256 bit range bound
      Checks overflow, underflow and division by zero
      Exists in range from -(2^maxBitLen-1) to 2^maxBitLen-1
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  KVPair:
    properties:
      key:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Key
      value:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Value
    title: Define these here for compatibility but use tmlibs/common.KVPair.
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/tendermint/tendermint/libs/common
  KVPairs:
    items:
      $ref: '#/definitions/KVPair'
    type: array
    x-go-package: github.com/okex/okchain/vendor/github.com/tendermint/tendermint/libs/common
  ListResponseWithDeal:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      data:
        properties:
          data:
            items:
              $ref: '#/definitions/Deal'
            type: array
            x-go-name: Data
          paramPage:
            $ref: '#/definitions/ParamPage'
        type: object
        x-go-name: Data
      detailMsg:
        type: string
        x-go-name: DetailMsg
      msg:
        type: string
        x-go-name: Msg
    type: object
    x-go-package: github.com/okex/okchain/x/backend/rest
  ListResponseWithFeeDetail:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      data:
        properties:
          data:
            items:
              $ref: '#/definitions/FeeDetail'
            type: array
            x-go-name: Data
          paramPage:
            $ref: '#/definitions/ParamPage'
        type: object
        x-go-name: Data
      detailMsg:
        type: string
        x-go-name: DetailMsg
      msg:
        type: string
        x-go-name: Msg
    type: object
    x-go-package: github.com/okex/okchain/x/backend/rest
  ListResponseWithMatch:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      data:
        properties:
          data:
            items:
              $ref: '#/definitions/MatchResult'
            type: array
            x-go-name: Data
          paramPage:
            $ref: '#/definitions/ParamPage'
        type: object
        x-go-name: Data
      detailMsg:
        type: string
        x-go-name: DetailMsg
      msg:
        type: string
        x-go-name: Msg
    type: object
    x-go-package: github.com/okex/okchain/x/backend/rest
  ListResponseWithOrder:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      data:
        properties:
          data:
            items:
              $ref: '#/definitions/Order'
            type: array
            x-go-name: Data
          paramPage:
            $ref: '#/definitions/ParamPage'
        type: object
        x-go-name: Data
      detailMsg:
        type: string
        x-go-name: DetailMsg
      msg:
        type: string
        x-go-name: Msg
    type: object
    x-go-package: github.com/okex/okchain/x/backend/rest
  ListResponseWithTx:
    properties:
      code:
        format: int64
        type: integer
        x-go-name: Code
      data:
        properties:
          data:
            items:
              $ref: '#/definitions/Transaction'
            type: array
            x-go-name: Data
          paramPage:
            $ref: '#/definitions/ParamPage'
        type: object
        x-go-name: Data
      detailMsg:
        type: string
        x-go-name: DetailMsg
      msg:
        type: string
        x-go-name: Msg
    type: object
    x-go-package: github.com/okex/okchain/x/backend/rest
  MatchResult:
    properties:
      blockHeight:
        format: int64
        type: integer
        x-go-name: BlockHeight
      price:
        format: double
        type: number
        x-go-name: Price
      product:
        type: string
        x-go-name: Product
      timestamp:
        format: int64
        type: integer
        x-go-name: Timestamp
      volume:
        format: double
        type: number
        x-go-name: Quantity
    type: object
    x-go-package: github.com/okex/okchain/x/backend
  Msg:
    description: Transactions messages must fulfill the Msg
    properties:
      GetSignBytes:
        description: Get the canonical byte representation of the Msg.
        items:
          format: uint8
          type: integer
        type: array
      GetSigners:
        description: |-
          Signers returns the addrs of signers that must sign.
          CONTRACT: All signatures must be present to be valid.
          CONTRACT: Returns addrs in some deterministic order.
        items:
          $ref: '#/definitions/AccAddress'
        type: array
      Route:
        description: |-
          Return the message type.
          Must be alphanumeric or empty.
        type: string
      Type:
        description: |-
          Returns a human-readable string for the message, intended for utilization
          within tags
        type: string
      ValidateBasic:
        $ref: '#/definitions/Error'
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  OVPair:
    properties:
      operator_address:
        $ref: '#/definitions/ValAddress'
      validator_address:
        type: string
        x-go-name: VaAddr
    type: object
    x-go-package: github.com/okex/okchain/x/staking/types
  OVPairs:
    items:
      $ref: '#/definitions/OVPair'
    type: array
    x-go-package: github.com/okex/okchain/x/staking/types
  Order:
    properties:
      extraInfo:
        type: string
        x-go-name: ExtraInfo
      filledAvgPrice:
        $ref: '#/definitions/Dec'
      orderId:
        type: string
        x-go-name: OrderId
      price:
        $ref: '#/definitions/Dec'
      product:
        type: string
        x-go-name: Product
      quantity:
        $ref: '#/definitions/Dec'
      remainQuantity:
        $ref: '#/definitions/Dec'
      sender:
        $ref: '#/definitions/AccAddress'
      side:
        type: string
        x-go-name: Side
      status:
        format: int64
        type: integer
        x-go-name: Status
      timestamp:
        format: int64
        type: integer
        x-go-name: Timestamp
      txHash:
        type: string
        x-go-name: TxHash
    type: object
    x-go-package: github.com/okex/okchain/x/order
  ParamPage:
    properties:
      page:
        format: int64
        type: integer
        x-go-name: Page
      perPage:
        format: int64
        type: integer
        x-go-name: PerPage
      total:
        format: int64
        type: integer
        x-go-name: Total
    type: object
    x-go-package: github.com/okex/okchain/x/common
  PostDexListProposalReq:
    properties:
      base_req:
        $ref: '#/definitions/BaseReq'
      block_height:
        format: uint64
        type: integer
        x-go-name: BlockHeight
      description:
        type: string
        x-go-name: Description
      init_price:
        $ref: '#/definitions/Dec'
      initial_deposit:
        $ref: '#/definitions/DecCoins'
      list_asset:
        type: string
        x-go-name: ListAsset
      max_price_digit:
        format: uint64
        type: integer
        x-go-name: MaxPriceDigit
      max_size_digit:
        format: uint64
        type: integer
        x-go-name: MaxSizeDigit
      min_trade_size:
        type: string
        x-go-name: MinTradeSize
      proposal_type:
        type: string
        x-go-name: ProposalType
      proposer:
        $ref: '#/definitions/AccAddress'
      quote_asset:
        type: string
        x-go-name: QuoteAsset
      title:
        type: string
        x-go-name: Title
    title: PostDexListProposalReq defines the properties of a dex list proposal request's
      body.
    type: object
    x-go-package: github.com/okex/okchain/x/gov/client/rest
  Proof:
    description: Proof is Merkle proof defined by the list of ProofOps
    properties:
      ops:
        items:
          $ref: '#/definitions/ProofOp'
        type: array
        x-go-name: Ops
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/tendermint/tendermint/crypto/merkle
  ProofOp:
    description: |-
      ProofOp defines an operation used for calculating Merkle root
      The data could be arbitrary format, providing nessecary data
      for example neighbouring node hash
    properties:
      data:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Data
      key:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Key
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/tendermint/tendermint/crypto/merkle
  ResponseQuery:
    properties:
      code:
        format: uint32
        type: integer
        x-go-name: Code
      codespace:
        type: string
        x-go-name: Codespace
      height:
        format: int64
        type: integer
        x-go-name: Height
      index:
        format: int64
        type: integer
        x-go-name: Index
      info:
        type: string
        x-go-name: Info
      key:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Key
      log:
        description: bytes data = 2; // use "value" instead.
        type: string
        x-go-name: Log
      proof:
        $ref: '#/definitions/Proof'
      value:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Value
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/tendermint/tendermint/abci/types
  Result:
    properties:
      Code:
        $ref: '#/definitions/CodeType'
      Codespace:
        $ref: '#/definitions/CodespaceType'
      Data:
        description: |-
          Data is any data returned from the app.
          Data has to be length prefixed in order to separate
          results from multiple msgs executions
        items:
          format: uint8
          type: integer
        type: array
      GasUsed:
        description: 'GasUsed is the amount of gas actually consumed. NOTE: unimplemented'
        format: uint64
        type: integer
      GasWanted:
        description: GasWanted is the maximum units of work we allow this tx to perform.
        format: uint64
        type: integer
      Log:
        description: 'Log contains the txs log information. NOTE: nondeterministic.'
        type: string
      Tags:
        $ref: '#/definitions/Tags'
    title: Result is the union of ResponseFormat and ResponseCheckTx.
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
  StdSignature:
    description: StdSignature represents a sig
    properties:
      Address:
        $ref: '#/definitions/Address'
      Bytes:
        items:
          format: uint8
          type: integer
        type: array
      signature:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Signature
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/x/auth
  StdTx:
    description: 'NOTE: the first signature is the fee payer (Signatures must not
      be nil).'
    properties:
      memo:
        type: string
        x-go-name: Memo
      msg:
        items:
          $ref: '#/definitions/Msg'
        type: array
        x-go-name: Msgs
      signatures:
        items:
          $ref: '#/definitions/StdSignature'
        type: array
        x-go-name: Signatures
    title: StdTx is a standard way to wrap a Msg with Fee and Signatures.
    type: object
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/x/auth
  Tags:
    $ref: '#/definitions/KVPairs'
    description: Type synonym for convenience
  Ticker:
    properties:
      change:
        format: double
        type: number
        x-go-name: Change
      changePercentage:
        type: string
        x-go-name: ChangePercentage
      close:
        format: double
        type: number
        x-go-name: Close
      high:
        format: double
        type: number
        x-go-name: High
      low:
        format: double
        type: number
        x-go-name: Low
      open:
        format: double
        type: number
        x-go-name: Open
      price:
        format: double
        type: number
        x-go-name: Price
      product:
        type: string
        x-go-name: Product
      symbol:
        type: string
        x-go-name: Symbol
      timestamp:
        format: int64
        type: integer
        x-go-name: Timestamp
      volume:
        format: double
        type: number
        x-go-name: Volume
    type: object
    x-go-package: github.com/okex/okchain/x/backend
  Token:
    properties:
      desc:
        type: string
        x-go-name: Desc
      mintable:
        type: boolean
        x-go-name: Mintable
      originalSymbol:
        type: string
        x-go-name: OriginalSymbol
      owner:
        $ref: '#/definitions/AccAddress'
      symbol:
        type: string
        x-go-name: Symbol
      totalSupply:
        format: int64
        type: integer
        x-go-name: TotalSupply
    type: object
    x-go-package: github.com/okex/okchain/x/token
  TokenPair:
    properties:
      baseAssetSymbol:
        type: string
        x-go-name: BaseAssetSymbol
      maxPriceDigit:
        format: int64
        type: integer
        x-go-name: MaxPriceDigit
      maxSizeDigit:
        format: int64
        type: integer
        x-go-name: MaxQuantityDigit
      minTradeSize:
        $ref: '#/definitions/Dec'
      price:
        $ref: '#/definitions/Dec'
      quoteAssetSymbol:
        type: string
        x-go-name: QuoteAssetSymbol
    type: object
    x-go-package: github.com/okex/okchain/x/token
  Transaction:
    properties:
      address:
        type: string
        x-go-name: Address
      fee:
        type: string
        x-go-name: Fee
      quantity:
        type: string
        x-go-name: Quantity
      side:
        format: int64
        type: integer
        x-go-name: Side
      symbol:
        type: string
        x-go-name: Symbol
      timestamp:
        format: int64
        type: integer
        x-go-name: Timestamp
      txHash:
        type: string
        x-go-name: TxHash
      type:
        format: int64
        type: integer
        x-go-name: Type
    type: object
    x-go-package: github.com/okex/okchain/x/backend
  ValAddress:
    description: |-
      ValAddress defines a wrapper around bytes meant to present a validator's
      operator. When marshaled to a string or JSON, it uses Bech32.
    items:
      format: uint8
      type: integer
    type: array
    x-go-package: github.com/okex/okchain/vendor/github.com/cosmos/cosmos-sdk/types
info:
  description: |-
    the purpose of this application is to provide an application
    that is using plain go code to define an API

    This should demonstrate all the possible comment annotations
    that are available to turn go code into a fully compliant swagger 2.0 spec
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: there are no TOS at this moment, use at your own risk we take no
    responsibility
  title: API.
  version: 0.0.1
paths:
  /accounts/{address}:
    get:
      description: This will show the coins info.
      operationId: getCoinInfos
      parameters:
      - description: the address of accounts
        in: path
        name: address
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/CoinInfos'
      summary: show specified coins info of address.
      tags:
      - token
  /block_tx_hashes/{blockHeight}:
    get:
      description: Get tx hashes in the block of the blockHeight
      operationId: blockTxHashes
      parameters:
      - description: height of block
        format: int64
        in: path
        name: blockHeight
        required: true
        type: integer
        x-go-name: BlockHeight
      responses:
        "200":
          $ref: '#/responses/BlockTxHashesResponse'
      schemes:
      - http
      - https
      tags:
      - backend
  /candles/{instrumentId}:
    get:
      description: Get lastest k1min candles by instrument_id
      operationId: getCandles
      parameters:
      - description: instrument or product name,
        in: path
        name: instrumentId
        required: true
        type: string
        x-go-name: InstrumentId
      - description: 时间颗粒度，时间粒度，以秒为单位，如[60/180/300/900/1800/3600/7200/14400/21600/43200/86400/604800]
        in: query
        name: granularity
        required: true
        type: string
        x-go-name: Granularity
      - description: 获取k线数据的数量，最多1000条
        in: query
        name: size
        required: true
        type: string
        x-go-name: Size
      responses:
        "200":
          $ref: '#/responses/CandleResponse'
      schemes:
      - http
      - https
      tags:
      - backend
  /deals:
    get:
      description: Get deal list
      operationId: getDealList
      parameters:
      - description: user address
        in: query
        name: address
        type: string
        x-go-name: Address
      - description: token pair string
        in: query
        name: product
        type: string
        x-go-name: Product
      - description: side param,BUY or SELL
        in: query
        name: side
        type: string
        x-go-name: Side
      - description: start timestamp
        format: int64
        in: query
        name: start
        type: integer
        x-go-name: Start
      - description: end timestamp
        format: int64
        in: query
        name: end
        type: integer
        x-go-name: End
      - description: page param
        format: int64
        in: query
        name: page
        type: integer
        x-go-name: Page
      - description: page param
        format: int64
        in: query
        name: perPage
        type: integer
        x-go-name: PerPage
      responses:
        "200":
          $ref: '#/responses/DealListResponse'
      schemes:
      - http
      - https
      tags:
      - backend
  /fees:
    get:
      description: Get fee detail list
      operationId: getFeeDetails
      parameters:
      - description: user address
        in: query
        name: address
        required: true
        type: string
        x-go-name: Address
      - description: page param
        format: int64
        in: query
        name: page
        type: integer
        x-go-name: Page
      - description: page param
        format: int64
        in: query
        name: perPage
        type: integer
        x-go-name: PerPage
      responses:
        "200":
          $ref: '#/responses/FeaDetailListResponse'
      schemes:
      - http
      - https
      tags:
      - backend
  /gov/dexlist:
    post:
      description: Post DexListProposal Request
      operationId: DexList
      parameters:
      - description: id of proposal
        format: uint64
        in: query
        name: ProposalId
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/DexListResponse'
      schemes:
      - http
      - https
      tags:
      - gov
  /gov/dexlistproposal:
    post:
      description: Post DexListProposal Request
      operationId: DexListProposal
      parameters:
      - description: post_dex_list_proposal
        in: body
        name: DexListProposal
        required: true
        schema:
          $ref: '#/definitions/PostDexListProposalReq'
      responses:
        "200":
          $ref: '#/responses/DexListProposalResponse'
      schemes:
      - http
      - https
      tags:
      - gov
  /matches:
    get:
      description: Get match result list
      operationId: getMatchResults
      parameters:
      - description: token pair string
        in: query
        name: product
        type: string
        x-go-name: Product
      - description: start timestamp
        format: int64
        in: query
        name: start
        type: integer
        x-go-name: Start
      - description: end timestamp
        format: int64
        in: query
        name: end
        type: integer
        x-go-name: End
      - description: page param
        format: int64
        in: query
        name: page
        type: integer
        x-go-name: Page
      - description: page param
        format: int64
        in: query
        name: perPage
        type: integer
        x-go-name: PerPage
      responses:
        "200":
          $ref: '#/responses/MatchListResponse'
      schemes:
      - http
      - https
      tags:
      - backend
  /order/{orderId}:
    get:
      description: Get order detail by orderId
      operationId: getOrderDetail
      parameters:
      - description: an id of order
        in: path
        name: orderId
        required: true
        type: string
        x-go-name: OrderId
      responses:
        "200":
          $ref: '#/responses/OrderResponse'
      schemes:
      - http
      - https
      tags:
      - order
  /order/depthbook:
    get:
      description: Get order depthbook
      operationId: getDepthBook
      parameters:
      - description: token pair string
        in: query
        name: product
        required: true
        type: string
        x-go-name: Product
      responses:
        "200":
          $ref: '#/responses/BookResponse'
      schemes:
      - http
      - https
      tags:
      - order
  /order/list/{openOrClosed}:
    get:
      description: Get order list
      operationId: getOrderList
      parameters:
      - description: open/closed, get open/closed orders
        in: path
        name: openOrClosed
        required: true
        type: string
        x-go-name: OpenOrClosed
      - description: user address
        in: query
        name: address
        required: true
        type: string
        x-go-name: Address
      - description: token pair string
        in: query
        name: product
        type: string
        x-go-name: Product
      - description: side param,BUY or SELL
        in: query
        name: side
        type: string
        x-go-name: Side
      - description: page param
        format: int64
        in: query
        name: page
        type: integer
        x-go-name: Page
      - description: PerPage param
        format: int64
        in: query
        name: perPage
        type: integer
        x-go-name: PerPage
      - description: Start Timestamp
        format: int64
        in: query
        name: start
        type: integer
        x-go-name: Start
      - description: End Timestamp
        format: int64
        in: query
        name: end
        type: integer
        x-go-name: End
      - description: whether hide orders that have no fills, 0/1
        format: int64
        in: query
        name: hideNoFill
        type: integer
        x-go-name: HideNoFill
      responses:
        "200":
          $ref: '#/responses/OrderListResponse'
      schemes:
      - http
      - https
      tags:
      - backend
  /products:
    get:
      description: This will show all products.
      operationId: listProducts
      responses:
        "200":
          $ref: '#/responses/TokenPairs'
        "422":
          $ref: '#/responses/ResponseError'
      schemes:
      - http
      - https
      security:
      - api_key: []
      summary: List all products.
      tags:
      - token
  /staking/address:
    get:
      description: 列举全部operator_address-validator_address地址对
      operationId: ListAddressDetail
      responses:
        "200":
          $ref: '#/responses/ListAddressResponse'
      schemes:
      - http
      - https
      tags:
      - staking
  /staking/address/{OperatorAddr}/account_address:
    get:
      description: 通过operator_address查询对应account_address
      operationId: GetAccountAddressDetail
      parameters:
      - description: operator_address
        in: path
        name: OperatorAddr
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/GetAccountAddressResponse'
      schemes:
      - http
      - https
      tags:
      - staking
  /staking/address/{ValidatorAddr}/validator_address:
    get:
      description: 通过validator_address查询对应operator_address
      operationId: GetOperatorAddressDetail
      parameters:
      - description: validator_address
        in: path
        name: ValidatorAddr
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/GetOperatorAddressResponse'
      schemes:
      - http
      - https
      tags:
      - staking
  /tickers:
    get:
      description: 获取所有的交易行情信息
      operationId: getTickers
      parameters:
      - description: 获取所有的交易行情信息
        format: int64
        in: path
        name: count
        required: true
        type: integer
        x-go-name: Count
      - description: 1表示升序，0表示降序
        in: query
        name: sort
        type: string
        x-go-name: Sort
      responses:
        "200":
          $ref: '#/responses/TickersResponse'
      schemes:
      - http
      - https
      tags:
      - backend
  /tickers/{instrumentId}:
    get:
      description: Get candles of the instrument
      operationId: getTicker
      parameters:
      - description: instrument or product name,
        in: path
        name: instrumentId
        required: true
        type: string
        x-go-name: InstrumentId
      responses:
        "200":
          $ref: '#/responses/TickerResponse'
      schemes:
      - http
      - https
      tags:
      - backend
  /token/{symbol}:
    get:
      description: This will show the specified token info.
      operationId: tokenInfo
      parameters:
      - description: the symbol of token
        in: path
        name: symbol
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/TokenInfo'
      summary: List specified token info.
      tags:
      - token
  /tokens:
    get:
      description: This will show all tokens info.
      operationId: tokensInfo
      responses:
        "200":
          $ref: '#/responses/TokenInfos'
        "422":
          $ref: '#/responses/ResponseError'
      schemes:
      - http
      - https
      security:
      - api_key: []
      summary: List all tokens info.
      tags:
      - token
  /transactions:
    get:
      description: Get tx list
      operationId: getTxList
      parameters:
      - description: user address
        in: query
        name: address
        required: true
        type: string
        x-go-name: Address
      - description: 'tx type: 1:Transfer, 2:NewOrder, 3:CancelOrder'
        format: int64
        in: query
        name: type
        type: integer
        x-go-name: Type
      - description: start timestamp
        format: int64
        in: query
        name: start
        type: integer
        x-go-name: Start
      - description: end timestamp
        format: int64
        in: query
        name: end
        type: integer
        x-go-name: End
      - description: page param
        format: int64
        in: query
        name: page
        type: integer
        x-go-name: Page
      - description: page param
        format: int64
        in: query
        name: perPage
        type: integer
        x-go-name: PerPage
      responses:
        "200":
          $ref: '#/responses/TxListResponse'
      schemes:
      - http
      - https
      tags:
      - backend
responses:
  BlockTxHashesResponse:
    description: BlockTxHashes Response
    schema:
      items:
        type: string
      type: array
  BookResponse:
    description: Order depth book
    schema:
      $ref: '#/definitions/BookRes'
  CandleResponse:
    headers:
      code:
        format: int64
        type: integer
      detailMsg:
        type: string
      msg:
        type: string
    schema:
      items:
        items:
          type: string
        type: array
      type: array
  CoinInfos:
    description: A CoinInfos is the info of the coins.
    schema:
      items:
        $ref: '#/definitions/CoinInfo'
      type: array
  DealListResponse:
    description: Deal list
    schema:
      $ref: '#/definitions/ListResponseWithDeal'
  DexListProposalResponse:
    description: post_dex_list_proposal response
    schema:
      $ref: '#/definitions/StdTx'
  DexListResponse:
    description: post_dex_list response
    schema:
      $ref: '#/definitions/StdTx'
  FeaDetailListResponse:
    description: Fee detail list
    schema:
      $ref: '#/definitions/ListResponseWithFeeDetail'
  GetAccountAddressResponse:
    description: GetAccountAddressResponse
  GetOperatorAddressResponse:
    description: OperatorAddressResponse
  ListAddressResponse:
    description: ListAddressResponse
    schema:
      $ref: '#/definitions/OVPairs'
  MatchListResponse:
    description: Match Result List
    schema:
      $ref: '#/definitions/ListResponseWithMatch'
  OrderListResponse:
    description: Order list
    schema:
      $ref: '#/definitions/ListResponseWithOrder'
  OrderResponse:
    description: Order Info
    schema:
      $ref: '#/definitions/Order'
  ResponseError:
    description: A ResponseError is an error that is used when the required input
      fails validation.
    schema:
      properties:
        Code:
          description: The validation message
          example: Expected type int
          type: string
        Data:
          description: An optional field name to which this validation applies
          type: string
        Message:
          description: An optional field name to which this validation applies
          type: string
      type: object
  TickerResponse:
    description: Ticker Response
    schema:
      items:
        $ref: '#/definitions/Ticker'
      type: array
  TickersResponse:
    description: Tickers Response
    schema:
      items:
        $ref: '#/definitions/Ticker'
      type: array
  TokenInfo:
    description: A TokenInfo is the info of the market.
    schema:
      $ref: '#/definitions/Token'
  TokenInfos:
    description: A TokenInfos is the info of the market.
    schema:
      items:
        $ref: '#/definitions/Token'
      type: array
  TokenPairs:
    description: A Products is the info of the market.
    schema:
      items:
        $ref: '#/definitions/TokenPair'
      type: array
  TxListResponse:
    description: Transaction list
    schema:
      $ref: '#/definitions/ListResponseWithTx'
schemes:
- http
- https
security:
- api_key: []
securityDefinitions:
  api_key:
    in: header
    name: KEY
    type: apiKey
swagger: "2.0"
